{
    "sourceFile": "SQL Dump/Triggers/sequenceTriggers.sql",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1691741994545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691921155930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,67 @@\n FOR EACH ROW\r\n BEGIN\r\n     :NEW.USER_ID := user_id_seq.NEXTVAL;\r\n END;\r\n-/\n\\ No newline at end of file\n+/\r\n+\r\n+\r\n+\r\n+\r\n+-- \"BACKUP STOCK\" constraint using pl sql trigger \r\n+CREATE OR REPLACE TRIGGER checkBackupConstraint\r\n+BEFORE INSERT OR UPDATE ON \"BACKUP STOCK\"\r\n+FOR EACH ROW\r\n+DECLARE\r\n+    v_stock_count NUMBER;\r\n+BEGIN\r\n+    SELECT COUNT(*) INTO v_stock_count\r\n+    FROM STOCK\r\n+    WHERE SYMBOL = :NEW.STOCK;\r\n+\r\n+    IF v_stock_count = 0 THEN\r\n+        RAISE_APPLICATION_ERROR(-20001, 'Stock symbol does not exist in STOCK table');\r\n+    END IF;\r\n+END;\r\n+/\r\n+\r\n+-- REFER COUNT OF CUSTOMER \r\n+CREATE OR REPLACE TRIGGER update_refer_count\r\n+AFTER INSERT OR DELETE ON CUSTOMER\r\n+FOR EACH ROW\r\n+BEGIN\r\n+  UPDATE CUSTOMER SET REFER_COUNT = (SELECT COUNT(*) FROM CUSTOMER WHERE REFERER_ID = :NEW.USER_ID) WHERE USER_ID = :NEW.USER_ID;\r\n+END;\r\n+/\r\n+\r\n+\r\n+CREATE OR REPLACE TRIGGER user_id_trigger\r\n+BEFORE INSERT ON \"USER\"\r\n+FOR EACH ROW\r\n+BEGIN\r\n+    :NEW.USER_ID := user_id_seq.NEXTVAL;\r\n+END;\r\n+/\r\n+\r\n+CREATE OR REPLACE TRIGGER employee_id_trigger\r\n+BEFORE INSERT ON \"USER\"\r\n+FOR EACH ROW\r\n+BEGIN\r\n+    :NEW.USER_ID := employee_id_seq.NEXTVAL;\r\n+END;\r\n+/\r\n+\r\n+CREATE OR REPLACE TRIGGER order_id_trigger\r\n+BEFORE INSERT ON \"USER\"\r\n+FOR EACH ROW\r\n+BEGIN\r\n+    :NEW.USER_ID := order_id_seq.NEXTVAL;\r\n+END;\r\n+/\r\n+\r\n+CREATE OR REPLACE TRIGGER activity_id_trigger\r\n+BEFORE INSERT ON \"USER\"\r\n+FOR EACH ROW\r\n+BEGIN\r\n+    :NEW.USER_ID := order_id_seq.NEXTVAL;\r\n+END;\r\n+/\r\n"
                },
                {
                    "date": 1691921163978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,35 +8,10 @@\n \r\n \r\n \r\n \r\n--- \"BACKUP STOCK\" constraint using pl sql trigger \r\n-CREATE OR REPLACE TRIGGER checkBackupConstraint\r\n-BEFORE INSERT OR UPDATE ON \"BACKUP STOCK\"\r\n-FOR EACH ROW\r\n-DECLARE\r\n-    v_stock_count NUMBER;\r\n-BEGIN\r\n-    SELECT COUNT(*) INTO v_stock_count\r\n-    FROM STOCK\r\n-    WHERE SYMBOL = :NEW.STOCK;\r\n \r\n-    IF v_stock_count = 0 THEN\r\n-        RAISE_APPLICATION_ERROR(-20001, 'Stock symbol does not exist in STOCK table');\r\n-    END IF;\r\n-END;\r\n-/\r\n \r\n--- REFER COUNT OF CUSTOMER \r\n-CREATE OR REPLACE TRIGGER update_refer_count\r\n-AFTER INSERT OR DELETE ON CUSTOMER\r\n-FOR EACH ROW\r\n-BEGIN\r\n-  UPDATE CUSTOMER SET REFER_COUNT = (SELECT COUNT(*) FROM CUSTOMER WHERE REFERER_ID = :NEW.USER_ID) WHERE USER_ID = :NEW.USER_ID;\r\n-END;\r\n-/\r\n-\r\n-\r\n CREATE OR REPLACE TRIGGER user_id_trigger\r\n BEFORE INSERT ON \"USER\"\r\n FOR EACH ROW\r\n BEGIN\r\n"
                },
                {
                    "date": 1691921169264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,21 +5,8 @@\n     :NEW.USER_ID := user_id_seq.NEXTVAL;\r\n END;\r\n /\r\n \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-CREATE OR REPLACE TRIGGER user_id_trigger\r\n-BEFORE INSERT ON \"USER\"\r\n-FOR EACH ROW\r\n-BEGIN\r\n-    :NEW.USER_ID := user_id_seq.NEXTVAL;\r\n-END;\r\n-/\r\n-\r\n CREATE OR REPLACE TRIGGER employee_id_trigger\r\n BEFORE INSERT ON \"USER\"\r\n FOR EACH ROW\r\n BEGIN\r\n"
                }
            ],
            "date": 1691741994545,
            "name": "Commit-0",
            "content": "CREATE OR REPLACE TRIGGER user_id_trigger\r\nBEFORE INSERT ON \"USER\"\r\nFOR EACH ROW\r\nBEGIN\r\n    :NEW.USER_ID := user_id_seq.NEXTVAL;\r\nEND;\r\n/"
        }
    ]
}