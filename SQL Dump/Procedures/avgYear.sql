CREATE OR REPLACE PROCEDURE AVG_PRICE_ACROSS_YEAR(LISTAVP OUT VARCHAR2) IS 
  END_DATE DATE := TRUNC(SYSDATE)-365;
  CURR_DATE DATE := TRUNC(SYSDATE);
BEGIN
  LISTAVP := '[';
  FOR R IN (
  SELECT
  TRUNC(TRANSACTION_TIME) DAT,
  ROUND( AVG( LATEST_PRICE ), 4 ) AVG_PRICE 
FROM
  "ORDER" 
WHERE
  STATUS = 'SUCCESS' 
  AND TRUNC( SYSDATE ) - TRUNC( TRANSACTION_TIME ) <= 365 
GROUP BY
  TRUNC(TRANSACTION_TIME)
ORDER BY
  TRUNC(TRANSACTION_TIME) DESC
  )
  LOOP 
  WHILE CURR_DATE >= END_DATE
  LOOP 
    EXIT WHEN (CURR_DATE = R.DAT);
      LISTAVP := LISTAVP || '{"x":'||TIME_TO_EPOCH(CURR_DATE)*1000 || ',"y":'||0||'}';
    IF CURR_DATE <> END_DATE THEN 
      LISTAVP := LISTAVP ||',';
    END IF;
    CURR_DATE := CURR_DATE - 1;
  END LOOP;
  LISTAVP := LISTAVP|| '{"x":'||TIME_TO_EPOCH(R.DAT)*1000  ||',"y":'||R.AVG_PRICE||'}';
  IF CURR_DATE <> END_DATE THEN 
      LISTAVP := LISTAVP|| ',';
    END IF;
  END LOOP;
  WHILE CURR_DATE >= END_DATE
  LOOP 
      LISTAVP := LISTAVP ||'{"x":'|| TIME_TO_EPOCH(CURR_DATE)*1000 || ',"y":'||0||'}';
      IF CURR_DATE <> END_DATE THEN 
      LISTAVP := LISTAVP|| ',';
    END IF;
    CURR_DATE := CURR_DATE - 1;
  END LOOP;
  LISTAVP := LISTAVP || ']';
END;
/

DECLARE
	ANS VARCHAR2(32767);
BEGIN 
	AVG_PRICE_ACROSS_YEAR(ANS);
	DBMS_OUTPUT.PUT_LINE(ANS);
END;
/