-- is number of orders in your table > 5000
-- if not notify
ALTER TABLE "ORDER" 
DROP CONSTRAINT FK_ORDER_USER_PORTFOLIO;

ALTER TABLE "ORDER"
DROP COLUMN SECTOR ;

ALTER TABLE "ORDER"
ADD CONSTRAINT FK_USER_ORDER_USERID FOREIGN KEY(USER_ID) REFERENCES "USER" (USER_ID)
ON DELETE CASCADE;

ALTER TABLE "ORDER"
MODIFY TRANSACTION_TIME DEFAULT (NULL); 

ALTER TABLE "ORDER"
MODIFY LATEST_UPDATE_TIME DEFAULT (SYSDATE);

ALTER TABLE OWNS
DROP CONSTRAINT FK_OWNS_PORTFOLIO;

ALTER TABLE OWNS
DROP COLUMN SECTOR;

ALTER TABLE OWNS 
DROP CONSTRAINT PK_OWNS;

ALTER TABLE OWNS 
ADD CONSTRAINT PK_OWNS PRIMARY KEY(USER_ID,SYMBOL);

ALTER TABLE OWNS
ADD CONSTRAINT FK_USER_OWNS_USERID FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID) ON DELETE CASCADE;

ALTER TABLE PORTFOLIO
DROP COLUMN CASH_AMOUNT;

ALTER TABLE "BACKUP STOCK"
DROP CONSTRAINT FK_BACKUP_STOCK_CONTROLLER_ID;

ALTER TABLE "BACKUP STOCK"
DROP CONSTRAINT CHK_BACKUP_STOCK_NON_NEGATIVE;

ALTER TABLE "BACKUP STOCK"
DROP (UPDATE_TIME, VALUE, PRICE, CONTROLLER_ID);

UPDATE STOCK 
SET BLOCKED = 'F';

UPDATE "ORDER"
SET TRANSACTION_TIME = NULL
WHERE STATUS = 'PENDING' OR STATUS = 'FAILURE'; 

UPDATE "ORDER"
SET TRANSACTION_FEE = 0
WHERE STATUS = 'FAILURE'; 

UPDATE "ORDER"
SET STATUS = 'PENDING'
WHERE MOD(ORDER_ID,2) = 0 AND STATUS = 'FAILURE';

create TABLE temp_lot_table(
	sym VARCHAR2(10),
	avail_lots number(10,2),
	lotto number(10,2)
)


BEGIN
FOR R IN (SELECT SYMBOL,AVAILABLE_LOTS,LOT FROM STOCK)
LOOP 
INSERT INTO temp_lot_table values(r.symbol,r.AVAILABLE_LOTS,r.lot);
END LOOP;
END;
/

ALTER TABLE STOCK
DROP CONSTRAINT CHK_STOCK_NON_NEGATIVE; 

ALTER TABLE STOCK
DROP COLUMN AVAILABLE_LOTS;

ALTER TABLE STOCK
DROP COLUMN LOT;

ALTER TABLE STOCK
ADD LOT NUMBER(10,2) DEFAULT 0;

ALTER TABLE STOCK
ADD AVAILABLE_LOTS NUMBER(10,2) DEFAULT 0;

ALTER TABLE STOCK
ADD CONSTRAINT CHK_STOCK_NON_NEGATIVE CHECK (PRICE >= 0 AND VALUE >= 0 AND LTP >= 0 AND AVAILABLE_LOTS >= 0);

BEGIN 
FOR R IN (SELECT * FROM TEMP_LOT_TABLE)
LOOP 
UPDATE STOCK 
SET AVAILABLE_LOTS = R.AVAIL_LOTS , LOT = ROUND(R.LOTTO/50,0)*50 
WHERE SYMBOL = R.SYM ;
END LOOP;
END;
/

DROP TABLE TEMP_LOT_TABLE;

UPDATE STOCK 
SET AVAILABLE_LOTS = ROUND(AVAILABLE_LOTS/LOT,0)*LOT+LOT;

BEGIN
   FOR R IN (SELECT ORDER_ID,LATEST_PRICE,LATEST_QUANTITY FROM "ORDER" WHERE STATUS <> 'FAILURE' ORDER BY ORDER_ID )
   LOOP 
      UPDATE "ORDER"
			SET TRANSACTION_FEE = ROUND(R.LATEST_PRICE*R.LATEST_QUANTITY*2/100,2)
			WHERE ORDER_ID = R.ORDER_ID;
   END LOOP;
END;
/

UPDATE "ORDER"
SET TRANSACTION_FEE = 0 
WHERE STATUS = 'FAILURE';



BEGIN 
FOR R IN (SELECT * FROM "ORDER" WHERE STATUS = 'SUCCESS'  AND LATEST_UPDATE_TIME > TRANSACTION_TIME)
LOOP 
UPDATE "ORDER"
SET TRANSACTION_TIME = R.LATEST_UPDATE_TIME 
WHERE ORDER_ID = R.ORDER_ID;
END LOOP;
FOR R IN (SELECT * FROM "ORDER" WHERE STATUS = 'SUCCESS'  AND LATEST_UPDATE_TIME < TRANSACTION_TIME)
LOOP 
UPDATE "ORDER"
SET LATEST_UPDATE_TIME = R.TRANSACTION_TIME 
WHERE ORDER_ID = R.ORDER_ID;
END LOOP;
END;
/

BEGIN
FOR R IN 
(SELECT O1.SYMBOL,O1.LATEST_PRICE,O1.LATEST_UPDATE_TIME
FROM "ORDER" O1
WHERE O1.STATUS = 'SUCCESS'
AND LATEST_UPDATE_TIME >= ALL(
SELECT O2.LATEST_UPDATE_TIME
FROM "ORDER" O2
WHERE O2.STATUS = 'SUCCESS' AND O2.SYMBOL = O1.SYMBOL
))
LOOP 
UPDATE STOCK 
SET LTP = R.LATEST_PRICE 
WHERE SYMBOL = R.SYMBOL;
END LOOP;
END;
/

DELETE FROM OWNS;
DELETE FROM PORTFOLIO;

BEGIN 
FOR R IN(SELECT SYMBOL,CORP_ID,AVAILABLE_LOTS,LOT FROM STOCK)
loop
INSERT INTO OWNS(USER_ID,SYMBOL,QUANTITY) VALUES(R.CORP_ID,R.SYMBOL,R.AVAILABLE_LOTS*R.LOT);
end loop;
END;
/

BEGIN
FOR R IN(
SELECT USER_ID,SYMBOL,SUM(LATEST_QUANTITY) QUANTITY
FROM "ORDER" 
WHERE STATUS = 'SUCCESS' AND "TYPE" = 'BUY'
GROUP BY USER_ID , SYMBOL
ORDER BY USER_ID)
LOOP 
	INSERT INTO OWNS VALUES(R.USER_ID,R.SYMBOL,R.QUANTITY);
END LOOP;
FOR R IN(
SELECT USER_ID,SECTOR_OF_STOCK(SYMBOL) SECTOR,SUM(LATEST_PRICE*LATEST_QUANTITY) BUY_AMOUNT
FROM "ORDER" 
WHERE STATUS = 'SUCCESS' AND "TYPE" = 'BUY'
GROUP BY USER_ID,SECTOR_OF_STOCK(SYMBOL)
ORDER BY USER_ID)
LOOP 
INSERT INTO PORTFOLIO VALUES(R.USER_ID,R.SECTOR,R.BUY_AMOUNT,0);
END LOOP;
END;
/


DELETE FROM "ORDER" WHERE "TYPE" = 'SELL';


DELETE FROM "BACKUP STOCK";

SELECT STOCK.SYMBOL,(SELECT NAME FROM "USER" WHERE USER_ID = STOCK.CORP_ID) NAME,AVAILABLE_LOTS*LOT NUM_SHARES,QUANTITY
FROM STOCK LEFT OUTER JOIN OWNS ON OWNS.USER_ID = STOCK.CORP_ID
ORDER BY NAME ;

UPDATE STOCK 
SET LOT = LOT/10;

ALTER TABLE "ORDER"
ADD STOP_PRICE NUMBER(10,2);

BEGIN 
FOR R IN (SELECT SYMBOL,LTP FROM STOCK)
LOOP 
UPDATE "ORDER"
SET STOP_PRICE = ROUND((R.LTP-DBMS_RANDOM.VALUE(1, 100))/10,0)*10
WHERE SYMBOL = R.SYMBOL;
END LOOP;
END;
/