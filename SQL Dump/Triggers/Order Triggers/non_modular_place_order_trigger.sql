CREATE OR REPLACE TRIGGER place_order_check
BEFORE INSERT
ON "ORDER"
FOR EACH ROW 
DECLARE 
TYP VARCHAR2(20);
SYM VARCHAR2(40);
NUM_SHARES NUMBER;
ALLOWED_SHARES NUMBER;
BEGIN 
	SELECT "TYPE" INTO TYP FROM "USER" WHERE USER_ID = :NEW.USER_ID;
	IF TYP NOT IN ('Admin','Customer') THEN 
			RAISE_APPLICATION_ERROR(-20001,'User not permitted');
	END IF;
	SELECT SYMBOL INTO SYM FROM STOCK WHERE SYMBOL = :NEW.SYMBOL AND BLOCKED = 'F';  
	IF SYM IS NULL THEN  
		RAISE_APPLICATION_ERROR(-20002,'Invalid stock');
	END IF;
	
	IF :NEW."TYPE" = 'BUY' THEN 
	SELECT LOT INTO NUM_SHARES FROM STOCK WHERE SYMBOL = :NEW.SYMBOL;
	SELECT LOT*AVAILABLE_LOTS INTO ALLOWED_SHARES FROM STOCK WHERE SYMBOL = :NEW.SYMBOL;
	IF :NEW.LATEST_QUANTITY*NUM_SHARES > ALLOWED_SHARES THEN 
		RAISE_APPLICATION_ERROR(-20003,'Invalid amount of stock');
	END IF;
	ELSIF :NEW."TYPE" = 'BUY'
	
	END IF;
	:NEW.LATEST_QUANTITY := :NEW.LATEST_QUANTITY*NUM_SHARES;
	IF TYP = 'Admin' THEN 
		:NEW.TRANSACTION_FEE := 0;
	ELSIF TYP = 'Customer' THEN  
		:NEW.TRANSACTION_FEE := ROUND(:NEW.LATEST_PRICE * :NEW.LATEST_QUANTITY * 0.05 / 100,0);
	END IF;
		:NEW.LATEST_UPDATE_TIME := CURRENT_TIMESTAMP;
END;
/ 
