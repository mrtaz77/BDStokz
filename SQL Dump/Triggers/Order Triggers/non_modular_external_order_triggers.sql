CREATE OR REPLACE TRIGGER ORDER_UPDATE_EXTERNAL_TRIGGER
AFTER UPDATE OF LATEST_PRICE,LATEST_QUANTITY,STATUS
ON "ORDER"
FOR EACH ROW 
DECLARE 
SYM VARCHAR2(40);
USERID NUMBER;
USER_TYPE VARCHAR2(20);
PORTSEC VARCHAR2(40);
BEGIN
IF :NEW.STATUS = 'SUCCESS' THEN
   	SELECT SYMBOL INTO SYM FROM STOCK WHERE SYMBOL = :NEW.SYMBOL;
	SELECT "TYPE" INTO USER_TYPE FROM "USER" WHERE USER_ID = :NEW.USER_ID;
	SELECT USER_ID INTO USERID FROM "USER" WHERE USER_ID = :NEW.USER_ID;
	IF :NEW."TYPE" = 'BUY' THEN 
		UPDATE OWNS
		SET QUANTITY = QUANTITY - :NEW.LATEST_QUANTITY
		WHERE USER_ID = (SELECT CORP_ID FROM STOCK WHERE SYMBOL = SYM) AND SYMBOL = SYM;
	
		UPDATE STOCK
		SET AVAILABLE_LOTS = :NEW.LATEST_QUANTITY/(SELECT LOT FROM STOCK WHERE SYMBOL = SYM),LTP = :NEW.LATEST_PRICE
		WHERE SYMBOL = SYM;


		IF USER_TYPE = 'Customer' THEN 
			SELECT SYMBOL INTO SYM FROM OWNS WHERE SYMBOL = :NEW.SYMBOL;
			SELECT USER_ID INTO USERID FROM OWNS WHERE USER_ID = :NEW.USER_ID;
			IF SYM IS NULL OR USERID IS NULL THEN 
				INSERT INTO OWNS VALUES(:NEW.USER_ID,:NEW.SYMBOL,:NEW.LATEST_QUANTITY);
			ELSE 
				UPDATE OWNS
				SET QUANTITY = QUANTITY + :NEW.LATEST_QUANTITY
				WHERE USER_ID = USERID AND SYMBOL = SYM;
			END IF;

			SELECT SECTOR INTO PORTSEC FROM PORTFOLIO WHERE SECTOR = SECTOR_OF_STOCK(:NEW.SYMBOL);
			SELECT USER_ID INTO USERID FROM PORTFOLIO WHERE USER_ID = :NEW.USER_ID;
			
			IF PORTSEC IS NULL OR USERID IS NULL THEN
				INSERT INTO PORTFOLIO VALUES (:NEW.USER_ID,SECTOR_OF_STOCK(:NEW.SYMBOL),:NEW.LATEST_PRICE*:NEW.LATEST_QUANTITY,0);
			ELSE 
				UPDATE PORTFOLIO
				SET BUY_AMOUNT = BUY_AMOUNT + :NEW.LATEST_PRICE*:NEW.LATEST_QUANTITY
				WHERE USER_ID = USERID AND SECTOR = PORTSEC;
			END IF;

				-- DETERMINE COMMISSION_PCT FORMULA FOR BROKER

		ELSIF  USER_TYPE = 'Admin' THEN
			SELECT SYMBOL INTO SYM FROM "BACKUP STOCK" WHERE SYMBOL = :NEW.SYMBOL;
			IF SYM IS NULL THEN
				INSERT INTO "BACKUP STOCK" VALUES(:NEW.SYMBOL,:NEW.LATEST_QUANTITY/(SELECT LOT FROM STOCK WHERE SYMBOL = SYM));
			ELSE 
				UPDATE "BACKUP STOCK" 
				SET AVAILABLE_LOTS = AVAILABLE_LOTS + :NEW.LATEST_QUANTITY/(SELECT LOT FROM STOCK WHERE SYMBOL = SYM)
				WHERE SYMBOL = :NEW.SYMBOL;
			END IF;
		END IF;
	ELSIF  :NEW."TYPE" = 'SELL' THEN
		IF USER_TYPE = 'Customer' THEN 
			UPDATE OWNS
			SET QUANTITY = QUANTITY - :NEW.LATEST_QUANTITY
			WHERE USER_ID = USERID AND SYMBOL = SYM;
		ELSIF  USER_TYPE = 'Admin' THEN
			UPDATE "BACKUP STOCK" 
			SET AVAILABLE_LOTS = AVAILABLE_LOTS - :NEW.LATEST_QUANTITY/(SELECT LOT FROM STOCK WHERE SYMBOL = SYM)
			WHERE SYMBOL = :NEW.SYMBOL;
		END IF;

	END IF;
END IF;
END;
/